--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -14,7 +14,7 @@
 # other options for the build, you can i.e. activate the ruby bindings by passing
 #   -D BUILD_RUBY_EXT=ON
 # to cmake. Other options analog
-option(BUILD_DEMOS "Build the demo applications" ON)
+option(BUILD_DEMOS "Build the demo applications" OFF)
 option(INSTALL_DEMOS "Install the demo applications" OFF)
 option(BUILD_SHARED "Build and install the shared library" ON)
 option(BUILD_STATIC "Build as static library" ON)
@@ -29,11 +29,17 @@
 if(BUILD_DEMOS OR BUILD_RUBY_EXT OR INSTALL_STATIC)
   set(BUILD_STATIC ON FORCE)
 endif(BUILD_DEMOS OR BUILD_RUBY_EXT OR INSTALL_STATIC)
-
+IF (WIN32)
+#set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=gnu99") # allways use gnu99
+#set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -ffast-math") # extend release-profile with fast-math
+#set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -Wall") # extend debug-profile with -Wall
+ADD_DEFINITIONS(" /TP ")
+ELSE ()
+#set (CMAKE_C_COMPILER arm-openwrt-linux-muslgnueabi-gcc)
 set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=gnu99") # allways use gnu99
-set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -ffast-math") # extend release-profile with fast-math
-set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -Wall") # extend debug-profile with -Wall
-
+set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -ffast-math")
+set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -Wall")
+ENDIF ()
 add_subdirectory(src)
 
 if(BUILD_DEMOS)
